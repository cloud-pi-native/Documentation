name: Build

on:
  push:
    branches:
      - main
    paths:
      - hexaforge/**
      - cloud-pi-native/**
  workflow_dispatch:

jobs:
  path-filter:
    runs-on: ubuntu-latest
    outputs:
      hexaforge: ${{ steps.filter.outputs.hexaforge }}
      cpin: ${{ steps.filter.outputs.cpin }}
    steps:
      - name: Check updated files paths
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            hexaforge:
              - 'hexaforge/**'
            cpin:
              - 'cloud-pi-native/**'

  infos:
    name: Get infos
    runs-on: ubuntu-latest
    needs: 
      - path-filter
    outputs:
      matrix: ${{ steps.infos.outputs.MATRIX }}
    steps:
      - name: Checks-out repository
        id: infos
        run: |
          MATRIX="[]"
          HEXAFORGE='[{"name": "hexaforge"}]'
          if [ "${{ needs.path-filter.outputs.hexaforge }}" = 'true' ]; then
            MATRIX="$( jq -n -c --argjson acc "$MATRIX" '$acc + [{ "name": "hexaforge", "context": ".", "dockerfile": "Dockerfile.hexaforge" }] )"
          else if [ "${{ needs.path-filter.outputs.cpin }}" = 'true' ]; then
            MATRIX="$( jq -n -c --argjson acc "$MATRIX" '$acc + [{ "name": "cpin", "context": ".", "dockerfile": "Dockerfile.cpin" }] )"
          fi
          echo "MATRIX=$MATRIX" >> $GITHUB_OUTPUT

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: 
      - path-filter
      - infos
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        images: ${{ fromJSON(needs.infos.outputs.matrix) }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU (for multi platform build)
        uses: docker/setup-qemu-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.images.context }}
          file: ${{ matrix.images.dockerfile }}
          tags: ghcr.io/${{ github.repository }}-${{ matrix.images.name }}:latest
          target: prod
          platforms: linux/amd64,linux/arm64
          push: true

      - name: Deploy new image
        run: |
          curl -X POST https://gitops.fabrique-numerique.fr/api/v1/applications/cloud-pi-native-docs/sync \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
            -d '${{ vars.ARGOCD_SYNC_PAYLOAD }}'